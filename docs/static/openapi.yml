{"id":"fiamma","consumes":["application/json"],"produces":["application/json"],"swagger":"2.0","info":{"description":"Chain fiamma REST API","title":"HTTP API Console","contact":{"name":"fiamma"},"version":"version not set"},"paths":{"/fiamma.bitvmstaker.Msg/CreateStaker":{"post":{"tags":["Msg"],"operationId":"FiammaMsg_CreateStaker","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/fiamma.bitvmstaker.MsgCreateStaker"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.bitvmstaker.MsgCreateStakerResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma.bitvmstaker.Msg/RemoveStaker":{"post":{"tags":["Msg"],"operationId":"FiammaMsg_RemoveStaker","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/fiamma.bitvmstaker.MsgRemoveStaker"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.bitvmstaker.MsgRemoveStakerResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma.bitvmstaker.Msg/UpdateCommitteeAddress":{"post":{"tags":["Msg"],"operationId":"FiammaMsg_UpdateCommitteeAddress","parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/fiamma.bitvmstaker.MsgUpdateCommitteeAddress"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.bitvmstaker.MsgUpdateCommitteeAddressResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma.bitvmstaker.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"FiammaMsg_UpdateParams","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/fiamma.bitvmstaker.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.bitvmstaker.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma.zkpverify.Msg/SubmitCommunityVerification":{"post":{"tags":["Msg"],"summary":"SubmitCommunityVerification defines a community (zkpverify) operation for verifying a proof.","operationId":"FiammaMsg_SubmitCommunityVerification","parameters":[{"description":"MsgSubmitCommunityVerification is the proof verify community verification request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/fiamma.zkpverify.MsgSubmitCommunityVerification"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.zkpverify.MsgSubmitCommunityVerificationResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma.zkpverify.Msg/SubmitProof":{"post":{"tags":["Msg"],"summary":"SubmitProof defines a (zkpverify) operation for verifying a proof.","operationId":"FiammaMsg_SubmitProof","parameters":[{"description":"MsgSubmitProof is the proof verify verification request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/fiamma.zkpverify.MsgSubmitProof"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.zkpverify.MsgSubmitProofResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma.zkpverify.Msg/UpdateParams":{"post":{"tags":["Msg"],"summary":"UpdateParams defines a (governance) operation for updating the module\nparameters. The authority defaults to the x/gov module account.","operationId":"FiammaMsg_UpdateParamsMixin8","parameters":[{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/fiamma.zkpverify.MsgUpdateParams"}}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.zkpverify.MsgUpdateParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma/bitvmstaker/committee_address":{"get":{"tags":["Query"],"summary":"QueryCommitteeAddressRequest is the request type for the Query/CommitteeAddress RPC method.","operationId":"FiammaQuery_CommitteeAddress","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.bitvmstaker.QueryCommitteeAddressResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma/bitvmstaker/get_all_staker_info":{"get":{"tags":["Query"],"summary":"QueryAllStakerInfoRequest is the request type for the Query/AllStakerInfo RPC method.","operationId":"FiammaQuery_AllStakerInfo","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.bitvmstaker.QueryAllStakerInfoResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma/bitvmstaker/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"FiammaQuery_Params","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.bitvmstaker.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma/zkpverify/get_bitvm_challenge_data":{"get":{"tags":["Query"],"summary":"Queries bitvm witness by proof id","operationId":"FiammaQuery_BitVMChallengeData","parameters":[{"type":"string","name":"proof_id","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.zkpverify.QueryBitVMChallengeDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma/zkpverify/get_proof_data":{"get":{"tags":["Query"],"summary":"Queries proof data by proof id","operationId":"FiammaQuery_ProofData","parameters":[{"type":"string","name":"proof_id","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.zkpverify.QueryProofDataResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma/zkpverify/get_verify_result":{"get":{"tags":["Query"],"operationId":"FiammaQuery_VerifyResult","parameters":[{"type":"string","name":"proof_id","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.zkpverify.QueryVerifyResultResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma/zkpverify/params":{"get":{"tags":["Query"],"summary":"Parameters queries the parameters of the module.","operationId":"FiammaQuery_ParamsMixin7","responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.zkpverify.QueryParamsResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma/zkpverify/pending_proof":{"get":{"tags":["Query"],"summary":"Queries a list of PendingProof items.","operationId":"FiammaQuery_PendingProof","parameters":[{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.zkpverify.QueryPendingProofResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma/zkpverify/pending_proof_by_namespace":{"get":{"tags":["Query"],"summary":"Queries a list of PendingProofByNamespace items.","operationId":"FiammaQuery_PendingProofByNamespace","parameters":[{"type":"string","name":"namespace","in":"query"},{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.zkpverify.QueryPendingProofByNamespaceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}},"/fiamma/zkpverify/verify_results_by_namespace":{"get":{"tags":["Query"],"summary":"Queries a list of VerifyResult items by namespace.","operationId":"FiammaQuery_VerifyResultsByNamespace","parameters":[{"type":"string","name":"namespace","in":"query"},{"type":"string","format":"byte","description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","name":"pagination.key","in":"query"},{"type":"string","format":"uint64","description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","name":"pagination.offset","in":"query"},{"type":"string","format":"uint64","description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","name":"pagination.limit","in":"query"},{"type":"boolean","description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","name":"pagination.count_total","in":"query"},{"type":"boolean","description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","name":"pagination.reverse","in":"query"}],"responses":{"200":{"description":"A successful response.","schema":{"$ref":"#/definitions/fiamma.zkpverify.QueryVerifyResultsByNamespaceResponse"}},"default":{"description":"An unexpected error response.","schema":{"$ref":"#/definitions/google.rpc.Status"}}}}}},"definitions":{"cosmos.base.query.v1beta1.PageRequest":{"description":"message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }","type":"object","title":"PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:","properties":{"count_total":{"description":"count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.","type":"boolean"},"key":{"description":"key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.","type":"string","format":"byte"},"limit":{"description":"limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.","type":"string","format":"uint64"},"offset":{"description":"offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.","type":"string","format":"uint64"},"reverse":{"description":"reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43","type":"boolean"}}},"cosmos.base.query.v1beta1.PageResponse":{"description":"PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }","type":"object","properties":{"next_key":{"description":"next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results.","type":"string","format":"byte"},"total":{"type":"string","format":"uint64","title":"total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"}}},"fiamma.bitvmstaker.MsgCreateStaker":{"type":"object","properties":{"creator":{"type":"string"},"staker_address":{"type":"string"}}},"fiamma.bitvmstaker.MsgCreateStakerResponse":{"type":"object"},"fiamma.bitvmstaker.MsgRemoveStaker":{"type":"object","properties":{"creator":{"type":"string"},"staker_address":{"type":"string"}}},"fiamma.bitvmstaker.MsgRemoveStakerResponse":{"type":"object"},"fiamma.bitvmstaker.MsgUpdateCommitteeAddress":{"type":"object","properties":{"creator":{"type":"string"},"new_committee_address":{"type":"string"}}},"fiamma.bitvmstaker.MsgUpdateCommitteeAddressResponse":{"type":"object"},"fiamma.bitvmstaker.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless overwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/fiamma.bitvmstaker.Params"}}},"fiamma.bitvmstaker.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"fiamma.bitvmstaker.Params":{"description":"Params defines the parameters for the module.","type":"object"},"fiamma.bitvmstaker.QueryAllStakerInfoResponse":{"type":"object","properties":{"all_staker_info":{"type":"array","items":{"type":"object","$ref":"#/definitions/fiamma.bitvmstaker.StakerInfo"}},"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"}}},"fiamma.bitvmstaker.QueryCommitteeAddressResponse":{"type":"object","properties":{"committeeAddress":{"type":"string"}}},"fiamma.bitvmstaker.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/fiamma.bitvmstaker.Params"}}},"fiamma.bitvmstaker.StakerInfo":{"type":"object","title":"StakerInfo is the data structure for the BitVM staker information","properties":{"staker_address":{"type":"string"},"staker_index":{"type":"string","format":"uint64"}}},"fiamma.zkpverify.BitVMChallengeData":{"type":"object","properties":{"proposer":{"type":"string"},"public_input":{"type":"string","format":"byte"},"verify_result":{"type":"boolean"},"vk":{"type":"string","format":"byte"},"witness":{"type":"string","format":"byte"}}},"fiamma.zkpverify.DataLocation":{"type":"string","title":"DataLocation is the proof data location enum for the proof verification","default":"FIAMMA","enum":["FIAMMA","NUBITDA","AVAILDA"]},"fiamma.zkpverify.MsgSubmitCommunityVerification":{"description":"MsgSubmitCommunityVerification is the proof verify community verification request type.","type":"object","properties":{"creator":{"type":"string"},"proof_id":{"type":"string"},"verify_result":{"type":"boolean"}}},"fiamma.zkpverify.MsgSubmitCommunityVerificationResponse":{"type":"object","title":"MsgSubmitCommunityVerificationResponse defines the response structure for executing MsgSubmitCommunityVerification"},"fiamma.zkpverify.MsgSubmitProof":{"description":"MsgSubmitProof is the proof verify verification request type.","type":"object","properties":{"creator":{"type":"string"},"namespace":{"type":"string"},"proof":{"type":"string","format":"byte"},"proof_system":{"type":"string"},"public_input":{"type":"string","format":"byte"},"vk":{"type":"string","format":"byte"}}},"fiamma.zkpverify.MsgSubmitProofResponse":{"type":"object","title":"MsgSubmitProofResponse defines the response structure for executing MsgSubmitProof"},"fiamma.zkpverify.MsgUpdateParams":{"description":"MsgUpdateParams is the Msg/UpdateParams request type.","type":"object","properties":{"authority":{"description":"authority is the address that controls the module (defaults to x/gov unless\noverwritten).","type":"string"},"params":{"description":"NOTE: All parameters must be supplied.","$ref":"#/definitions/fiamma.zkpverify.Params"}}},"fiamma.zkpverify.MsgUpdateParamsResponse":{"description":"MsgUpdateParamsResponse defines the response structure for executing a\nMsgUpdateParams message.","type":"object"},"fiamma.zkpverify.Params":{"description":"Params defines the parameters for the module.","type":"object"},"fiamma.zkpverify.ProofData":{"type":"object","title":"ProofData is the data structure for the proof verification request","properties":{"namespace":{"type":"string"},"proof":{"type":"string","format":"byte"},"proof_system":{"$ref":"#/definitions/fiamma.zkpverify.ProofSystem"},"public_input":{"type":"string","format":"byte"},"vk":{"type":"string","format":"byte"}}},"fiamma.zkpverify.ProofSystem":{"type":"string","title":"ProofSystem is the proof system enum for the proof verification","default":"GROTH16_BN254_BITVM","enum":["GROTH16_BN254_BITVM","FFPLONK_BN254_BITVM"]},"fiamma.zkpverify.QueryBitVMChallengeDataResponse":{"description":"QueryBitVMChallengeDataResponse is response type for the Query/BitVMChallengeData RPC\nmethod.","type":"object","properties":{"bitvm_challenge_data":{"$ref":"#/definitions/fiamma.zkpverify.BitVMChallengeData"}}},"fiamma.zkpverify.QueryParamsResponse":{"description":"QueryParamsResponse is response type for the Query/Params RPC method.","type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","$ref":"#/definitions/fiamma.zkpverify.Params"}}},"fiamma.zkpverify.QueryPendingProofByNamespaceResponse":{"description":"QueryPendingProofByNamespaceResponse is response type for the Query/PendingProofByNamespace RPC method.","type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"pending_proofs":{"type":"array","items":{"type":"object","$ref":"#/definitions/fiamma.zkpverify.VerifyResult"}}}},"fiamma.zkpverify.QueryPendingProofResponse":{"description":"QueryPendingProofResponse is response type for the Query/PendingProof RPC\nmethod.","type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"pending_proofs":{"type":"array","items":{"type":"object","$ref":"#/definitions/fiamma.zkpverify.VerifyResult"}}}},"fiamma.zkpverify.QueryProofDataResponse":{"description":"QueryProofDataResponse is response type for the Query/ProofData RPC\nmethod.","type":"object","properties":{"proof_data":{"$ref":"#/definitions/fiamma.zkpverify.ProofData"}}},"fiamma.zkpverify.QueryVerifyResultResponse":{"type":"object","title":"QueryVerifyResultResponse is response type for the Query Proof verify result RPC","properties":{"verify_result":{"$ref":"#/definitions/fiamma.zkpverify.VerifyResult"}}},"fiamma.zkpverify.QueryVerifyResultsByNamespaceResponse":{"description":"QueryVerifyResultsByNamespaceResponse is the response type for the Query/VerifyResultsByNamespace RPC method.","type":"object","properties":{"pagination":{"$ref":"#/definitions/cosmos.base.query.v1beta1.PageResponse"},"verify_results":{"type":"array","items":{"type":"object","$ref":"#/definitions/fiamma.zkpverify.VerifyResult"}}}},"fiamma.zkpverify.VerificationStatus":{"type":"string","title":"VerificationStatus is the verification status enum for the proof verification","default":"INITIAL_VALIDATION","enum":["INITIAL_VALIDATION","COMMUNITY_VALIDATION","DEFINITIVE_VALIDATION"]},"fiamma.zkpverify.VerifyResult":{"type":"object","title":"VerifyResult is the data structure for the proof verification result","properties":{"community_verification_count":{"type":"string","format":"uint64"},"data_commitment":{"type":"string"},"data_location":{"$ref":"#/definitions/fiamma.zkpverify.DataLocation"},"namespace":{"type":"string"},"proof_id":{"type":"string"},"proof_system":{"$ref":"#/definitions/fiamma.zkpverify.ProofSystem"},"result":{"type":"boolean"},"status":{"$ref":"#/definitions/fiamma.zkpverify.VerificationStatus"}}},"google.protobuf.Any":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}},"google.rpc.Status":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"details":{"type":"array","items":{"type":"object","$ref":"#/definitions/google.protobuf.Any"}},"message":{"type":"string"}}}},"tags":[{"name":"Query"},{"name":"Msg"}]}